{"ast":null,"code":"import _classCallCheck from \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/maxencejoly/Desktop/termine\\u0301/W-JSC-502-MAR-2-2-irc-maxence.joly/client/src/App.js\";\nimport React, { Component } from 'react'; // import './App.css';\n// import './bootstrap.css';\n\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3001');\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      channelSelected: '#accueil',\n      username: 'invité',\n      usertemp: '',\n      temp: '',\n      tempMessage: '',\n      channels: [],\n      messages: [],\n      users: []\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePseudo = _this.handlePseudo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMessage = _this.handleMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      /*\n      * Connexion d'un utilisateur\n      */\n      socket.on('newuser', function (user) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: _this2.state.channelSelected,\n            author: 'system',\n            content: user.username + ' a rejoint le channel',\n            to: '',\n            chucho: 'no'\n          })\n        });\n      });\n      /*\n      * Rename d'un uilisateur\n      */\n\n      socket.on('renameuser', function (user) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: _this2.state.channelSelected,\n            author: 'system',\n            content: user.username + ' a changé son pseudo en ' + user.rename,\n            to: '',\n            chucho: 'no'\n          })\n        });\n      });\n      /*\n      * Deconnexion d'un utilisateur\n      */\n\n      socket.on('disuser', function (user) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: _this2.state.channelSelected,\n            author: 'system',\n            content: user.username + ' a quitté le channel',\n            to: '',\n            chucho: 'no'\n          })\n        });\n      });\n      /*\n      * Affichage des utilisateurs\n      */\n\n      socket.on('listUsers', function (user) {\n        _this2.setState({\n          users: []\n        });\n\n        for (var i in user) {\n          _this2.setState({\n            users: _this2.state.users.concat(user[i])\n          });\n        }\n      });\n      /*\n      * Définir les messages\n      */\n\n      socket.on('newmsg', function (message) {\n        _this2.setState({\n          messages: _this2.state.messages.concat({\n            channel: message.messages.messages.channel,\n            author: message.messages.messages.author,\n            content: message.messages.messages.content,\n            to: message.messages.messages.to,\n            chucho: message.messages.messages.chucho\n          })\n        });\n      });\n      /*\n      * Réception des channels\n      */\n\n      socket.on('listChannels', function (channels) {\n        _this2.setState({\n          channels: []\n        });\n\n        for (var i in channels) {\n          _this2.setState({\n            channels: _this2.state.channels.concat(channels[i])\n          });\n        }\n      });\n    }\n    /*\n    * Pour la connexion\n    */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      this.setState({\n        usertemp: event.target.value\n      });\n    }\n  }, {\n    key: \"handlePseudo\",\n    value: function handlePseudo(event) {\n      event.preventDefault();\n      socket.emit('login', {\n        username: this.state.usertemp\n      });\n      this.setState({\n        username: this.state.usertemp\n      });\n    }\n    /*\n    * Fonction pour commande /msg\n    */\n\n  }, {\n    key: \"commandMsg\",\n    value: function commandMsg(tab) {\n      tab = tab.filter(function (word) {\n        return word !== tab[0];\n      });\n      this.setState({\n        tempMessage: {\n          channel: this.state.channelSelected,\n          author: this.state.username,\n          content: tab.filter(function (word) {\n            return word !== tab[0];\n          }).join(' '),\n          to: tab[0],\n          chucho: 'yes'\n        }\n      });\n    }\n    /*\n    * Fonction pour commande /help\n    */\n\n  }, {\n    key: \"commandHelp\",\n    value: function commandHelp() {\n      this.setState({\n        tempMessage: {\n          channel: this.state.channelSelected,\n          author: 'system',\n          content: 'Voici une liste de commande disponible : ' + '/msg pour envoyer un message à quelqu\\'un. ' + '/nick pour changer de pseudo.' + 'D\\'autres commandes arriveront bientôt...',\n          to: '',\n          chucho: 'no'\n        }\n      });\n    }\n    /*\n    * Fonction pour commande /nick\n    */\n\n  }, {\n    key: \"commandName\",\n    value: function commandName(tab, event) {\n      socket.emit('rename', {\n        username: this.state.username,\n        rename: tab[1]\n      });\n      this.setState({\n        username: tab[1]\n      });\n    }\n    /*\n    * Fonction pour commande /create\n    */\n\n  }, {\n    key: \"commandCreate\",\n    value: function commandCreate(tab) {\n      var listChan = this.state.channels.filter(function (channel) {\n        return channel === '#' + tab[1];\n      });\n\n      if (listChan.length === 0) {\n        this.setState({\n          tempMessage: {\n            channel: this.state.channelSelected,\n            author: 'system',\n            content: 'Le channel a bien été créé',\n            to: '',\n            chucho: 'no'\n          }\n        });\n        socket.emit('newChannel', {\n          channel: tab[1]\n        });\n        socket.emit('newmessage', {\n          messages: this.state.tempMessage\n        });\n      }\n\n      if (listChan.length >= 1) {\n        this.setState({\n          tempMessage: {\n            channel: this.state.channelSelected,\n            author: 'system',\n            content: 'Ce channel existe déjà',\n            to: '',\n            chucho: 'no'\n          }\n        });\n        socket.emit('newmessage', {\n          messages: this.state.tempMessage\n        });\n      }\n\n      return true;\n    }\n    /*\n    *\n    */\n\n  }, {\n    key: \"commandJoin\",\n    value: function commandJoin(tab) {\n      this.setState({\n        channelSelected: tab[1]\n      });\n    }\n    /*\n    * Pour l'envoi de message\n    */\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        temp: event.target.value\n      });\n      var tab = event.target.value.split(' ');\n      var tabBegin = tab[0].split('');\n\n      if (tab[0] === \"/help\") {\n        this.commandHelp();\n        return false;\n      }\n\n      if (tab[0] === '/msg') {\n        this.commandMsg(tab);\n        return false;\n      }\n\n      if (tab[0] === '/nick') {\n        return false;\n      }\n\n      if (tab[0] === '/create') {\n        return false;\n      }\n\n      if (tab[0] === '/join') {\n        return false;\n      }\n\n      if (tabBegin[0] !== \"/\") {\n        this.setState({\n          tempMessage: {\n            channel: this.state.channelSelected,\n            author: this.state.username,\n            content: event.target.value,\n            to: '',\n            chucho: 'no'\n          }\n        });\n      }\n    }\n    /*\n    * Confirmation du formulaire / envoi de message\n    */\n\n  }, {\n    key: \"handleMessage\",\n    value: function handleMessage(event) {\n      event.preventDefault();\n      var tab = this.state.temp.split(' ');\n\n      if (tab[0] === '/nick') {\n        if (tab[1] !== undefined && tab[1] !== '') {\n          this.commandName(tab, event);\n        }\n\n        this.setState({\n          temp: ''\n        });\n        return false;\n      }\n\n      if (tab[0] === '/create') {\n        if (tab[1] !== undefined && tab[1] !== '') {\n          this.commandCreate(tab);\n        }\n\n        this.setState({\n          temp: ''\n        });\n        return false;\n      }\n\n      if (tab[0] === '/join') {\n        if (tab[1] !== undefined && tab[1] !== '') {\n          this.commandJoin(tab);\n        }\n      }\n\n      socket.emit('newmessage', {\n        messages: this.state.tempMessage\n      });\n      this.setState({\n        temp: ''\n      });\n    }\n    /*\n    * Afficher les messages\n    */\n\n  }, {\n    key: \"affichMessage\",\n    value: function affichMessage() {\n      var _this3 = this;\n\n      var tab = this.state.messages.filter(function (messages) {\n        return messages.channel === _this3.state.channelSelected;\n      });\n      return tab.map(function (message) {\n        if (message.author === 'system') {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, message.content));\n        }\n\n        if (message.to !== '' && message.to === _this3.state.username) {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, React.createElement(\"em\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, message.author, \" ta dit \"), \" : \", message.content);\n        }\n\n        if (message.to !== '' && message.author === _this3.state.username) {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }, React.createElement(\"em\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }, \" Vous avez chuchot\\xE9 \\xE0 \", message.to), \" : \", message.content);\n        }\n\n        if (message.author !== 'system' && message.chucho === 'no') {\n          return React.createElement(\"span\", {\n            className: \"msg\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }, React.createElement(\"strong\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293\n            },\n            __self: this\n          }, message.author), \" : \", message.content);\n        }\n      });\n    }\n    /*\n    *  Afficher les membres\n    */\n\n  }, {\n    key: \"affichMembers\",\n    value: function affichMembers() {\n      return this.state.users.map(function (user) {\n        return React.createElement(\"span\", {\n          className: \"users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, user);\n      });\n    }\n    /*\n    *  Afficher les channels\n    */\n\n  }, {\n    key: \"affichChannels\",\n    value: function affichChannels() {\n      var _this4 = this;\n\n      return this.state.channels.map(function (channel) {\n        return React.createElement(\"span\", {\n          className: \"chan\",\n          value: channel,\n          onClick: function onClick(event) {\n            _this4.setState({\n              channelSelected: event.target.getAttribute('value')\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, channel);\n      });\n    }\n    /*\n    * Rendu\n    */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.username === 'invité') {\n        return React.createElement(\"div\", {\n          className: \"flex justify-center text-center p-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \"Bienvenue sur My_IRC\"), React.createElement(\"div\", {\n          className: \"p-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, \"Votre pseudo :\")), React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"text-sm sm:text-base text-center relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2\",\n          type: \"text\",\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.handlePseudo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, \"Se connecter\"))));\n      }\n\n      if (this.state.username !== '') {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"list-reset flex flex-col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"rounded text-center relative -mb-px block border p-4 border-grey items-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, \"Liste des channels\", this.affichChannels())), React.createElement(\"div\", {\n          className: \"list-messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"messages\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, \"Bienvenue \", this.state.username, \" sur le channel \", this.state.channelSelected), React.createElement(\"div\", {\n          id: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, this.affichMessage())), React.createElement(\"div\", {\n          className: \"sendMessage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"sendForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"msg\",\n          value: this.state.temp,\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.handleMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, \"Envoyer\"))))), React.createElement(\"div\", {\n          className: \"list-members\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"members\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }, \"Liste des membres\", this.affichMembers())));\n      }\n\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, \" \", this.state.username, \" est rentr\\xE9 sur le channel\");\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/maxencejoly/Desktop/terminé/W-JSC-502-MAR-2-2-irc-maxence.joly/client/src/App.js"],"names":["React","Component","openSocket","socket","App","props","state","channelSelected","username","usertemp","temp","tempMessage","channels","messages","users","onChange","bind","handlePseudo","handleChange","handleMessage","on","user","setState","concat","channel","author","content","to","chucho","rename","i","message","event","target","value","preventDefault","emit","tab","filter","word","join","listChan","length","split","tabBegin","commandHelp","commandMsg","undefined","commandName","commandCreate","commandJoin","map","getAttribute","affichChannels","affichMessage","affichMembers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './App.css';\n// import './bootstrap.css';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3001');\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            channelSelected: '#accueil',\n            username : 'invité',\n            usertemp : '',\n            temp : '',\n            tempMessage : '',\n            channels: [],\n            messages : [],\n            users : []\n        }\n        this.onChange = this.onChange.bind(this);\n        this.handlePseudo = this.handlePseudo.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleMessage = this.handleMessage.bind(this);\n    }\n\n    componentDidMount() {\n\n        /*\n        * Connexion d'un utilisateur\n        */\n        socket.on('newuser', (user) => {\n            this.setState({\n                messages : this.state.messages.concat({\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: user.username + ' a rejoint le channel',\n                    to: '',\n                    chucho: 'no'\n                })\n            })\n        });\n\n        /*\n        * Rename d'un uilisateur\n        */\n        socket.on('renameuser', (user) => {\n            this.setState({\n                messages : this.state.messages.concat({\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: user.username + ' a changé son pseudo en ' + user.rename,\n                    to: '',\n                    chucho: 'no'\n                })\n            })\n        });\n\n        /*\n        * Deconnexion d'un utilisateur\n        */\n        socket.on('disuser', (user) => {\n            this.setState({\n                messages : this.state.messages.concat({\n                    channel: this.state.channelSelected,\n                    author: 'system',\n                    content: user.username + ' a quitté le channel',\n                    to: '',\n                    chucho: 'no'\n                })\n            })\n        });\n\n        /*\n        * Affichage des utilisateurs\n        */\n        socket.on('listUsers', (user) => {\n            this.setState({users : []});\n            for(var i in user) {\n                this.setState({users : this.state.users.concat(user[i])});\n            }\n        })\n\n        /*\n        * Définir les messages\n        */\n        socket.on('newmsg', (message) => {\n            this.setState({\n                messages : this.state.messages.concat({\n                    channel: message.messages.messages.channel,\n                    author: message.messages.messages.author,\n                    content: message.messages.messages.content,\n                    to: message.messages.messages.to,\n                    chucho: message.messages.messages.chucho\n                })\n            })\n        })\n\n        /*\n        * Réception des channels\n        */\n        socket.on('listChannels', (channels) => {\n            this.setState({channels : []});\n            for(var i in channels) {\n                this.setState({channels : this.state.channels.concat(channels[i])});\n            }\n        })\n    }\n\n    /*\n    * Pour la connexion\n    */\n    onChange(event) {\n        this.setState({ usertemp: event.target.value })\n    }\n\n    handlePseudo(event) {\n        event.preventDefault();\n        socket.emit('login', { username : this.state.usertemp })\n        this.setState({ username: this.state.usertemp })\n    }\n\n    /*\n    * Fonction pour commande /msg\n    */\n    commandMsg(tab) {\n        tab = tab.filter(word => word !== tab[0]);\n        this.setState({\n            tempMessage : {\n                channel: this.state.channelSelected,\n                author: this.state.username,\n                content: tab.filter(word => word !== tab[0]).join(' '),\n                to: tab[0],\n                chucho : 'yes'\n            }\n        });\n    }\n\n    /*\n    * Fonction pour commande /help\n    */\n    commandHelp() {\n        this.setState({\n            tempMessage : {\n                channel: this.state.channelSelected,\n                author: 'system',\n                content: 'Voici une liste de commande disponible : ' +\n                '/msg pour envoyer un message à quelqu\\'un. ' +\n                '/nick pour changer de pseudo.' +\n                'D\\'autres commandes arriveront bientôt...',\n                to: '',\n                chucho : 'no'\n            }\n        });\n    }\n\n    /*\n    * Fonction pour commande /nick\n    */\n    commandName(tab, event) {\n        socket.emit('rename', {\n            username : this.state.username,\n            rename : tab[1],\n        });\n        this.setState({ username: tab[1] });\n    }\n\n    /*\n    * Fonction pour commande /create\n    */\n    commandCreate(tab) {\n        var listChan = this.state.channels.filter(channel => channel === '#' + tab[1]);\n        if(listChan.length === 0 ) {\n            this.setState({\n                    tempMessage: {\n                        channel: this.state.channelSelected,\n                        author: 'system',\n                        content: 'Le channel a bien été créé',\n                        to: '',\n                        chucho : 'no'\n                    }\n            });\n            socket.emit('newChannel', {\n                channel: tab[1]\n            })\n            socket.emit('newmessage', { messages: this.state.tempMessage });\n        }\n        if(listChan.length >= 1 ) {\n            this.setState({\n                    tempMessage: {\n                        channel: this.state.channelSelected,\n                        author: 'system',\n                        content: 'Ce channel existe déjà',\n                        to: '',\n                        chucho : 'no'\n                    }\n            });\n            socket.emit('newmessage', { messages: this.state.tempMessage });\n        }\n        return true;\n    }\n\n    /*\n    *\n    */\n    commandJoin(tab) {\n        this.setState({channelSelected: tab[1]})\n    }\n\n\n    /*\n    * Pour l'envoi de message\n    */\n    handleChange(event) {\n        this.setState({ temp: event.target.value });\n        var tab = event.target.value.split(' ');\n        var tabBegin = tab[0].split('');\n        if(tab[0] === \"/help\") {\n            this.commandHelp();\n            return false;\n        }\n        if(tab[0] === '/msg') {\n            this.commandMsg(tab);\n            return false;\n        }\n        if(tab[0] === '/nick') {\n            return false;\n        }\n        if(tab[0] === '/create') {\n            return false;\n        }\n        if(tab[0] === '/join') {\n            return false;\n        }\n        if(tabBegin[0] !== \"/\") {\n            this.setState({\n                tempMessage: {\n                    channel: this.state.channelSelected,\n                    author : this.state.username,\n                    content: event.target.value,\n                    to: '',\n                    chucho: 'no'\n                }\n            })\n        }\n    }\n\n    /*\n    * Confirmation du formulaire / envoi de message\n    */\n    handleMessage(event) {\n        event.preventDefault();\n        var tab = this.state.temp.split(' ');\n        if(tab[0] === '/nick') {\n            if(tab[1] !== undefined && tab[1] !== '') {\n                    this.commandName(tab, event);\n            }\n            this.setState({temp: ''});\n            return false;\n        }\n        if(tab[0] === '/create') {\n            if(tab[1] !== undefined && tab[1] !== '') {\n                this.commandCreate(tab);\n            }\n            this.setState({temp: ''});\n            return false;\n        }\n        if(tab[0] === '/join') {\n            if(tab[1] !== undefined && tab[1] !== '') {\n                this.commandJoin(tab);\n            }\n        }\n        socket.emit('newmessage', { messages: this.state.tempMessage });\n        this.setState({temp: ''});\n    }\n\n    /*\n    * Afficher les messages\n    */\n    affichMessage() {\n        var tab = this.state.messages.filter( messages => messages.channel === this.state.channelSelected);\n        return tab.map(message => {\n            if(message.author === 'system') {\n                return <span className=\"msg\"><strong>{message.content}</strong></span>\n            }\n            if(message.to !== '' && message.to === this.state.username) {\n                return <span className=\"msg\"><em>{message.author} ta dit </em> : {message.content}</span>\n            }\n            if(message.to !== '' && message.author === this.state.username) {\n                return <span className=\"msg\"><em> Vous avez chuchoté à {message.to}</em> : {message.content}</span>\n            }\n            if(message.author !== 'system' && message.chucho === 'no') {\n                return <span className=\"msg\"><strong>{message.author}</strong> : {message.content}</span>\n            }\n        });\n   }\n\n   /*\n   *  Afficher les membres\n   */\n   affichMembers() {\n       return this.state.users.map(user => {\n           return <span className=\"users\">{user}</span>\n       });\n   }\n\n   /*\n   *  Afficher les channels\n   */\n   affichChannels() {\n       return this.state.channels.map(channel => {\n           return <span\n                className=\"chan\"\n                value={channel}\n                onClick={(event) => { this.setState({channelSelected: event.target.getAttribute('value')})}}>\n                    {channel}\n                </span>\n       })\n   }\n\n   /*\n   * Rendu\n   */\n\n    render() {\n        if(this.state.username === 'invité') {\n            return (\n                <div className=\"flex justify-center text-center p-8\">\n                    <div className=\"username\">\n                        <h1>Bienvenue sur My_IRC</h1>\n                        <div className=\"p-8\">\n                            <span className=\"label\">\n                                Votre pseudo :\n                            </span>\n                        </div>\n\n                            <form>\n                                <input className='text-sm sm:text-base text-center relative w-full border rounded placeholder-gray-400 focus:border-indigo-400 focus:outline-none py-2 pr-2' type=\"text\" onChange={ this.onChange}/>\n                                <button onClick={this.handlePseudo}>Se connecter</button>\n                            </form>\n                         </div>\n                </div>\n            )\n        }\n        if(this.state.username !== '') {\n            return (\n                <div className=\"App\">\n                    <div className=\"list-reset flex flex-col\">\n                        <div className=\"rounded text-center relative -mb-px block border p-4 border-grey items-center\">\n                            Liste des channels\n                            {this.affichChannels()}\n                        </div>\n                    </div>\n                        <div className=\"list-messages\">\n                            <div className=\"messages\">\n                                <em>Bienvenue { this.state.username } sur le channel {this.state.channelSelected}</em>\n                                <div id=\"content\">\n                                {this.affichMessage()}\n                            </div>\n                        </div>\n                        <div className=\"sendMessage\">\n                            <div className=\"sendForm\">\n                                <form >\n                                    <input id=\"msg\" value={this.state.temp} onChange={ this.handleChange }/>\n                                    <button onClick={this.handleMessage}>Envoyer</button>\n                                </form>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"list-members\">\n                            <div className=\"members\">\n                                Liste des membres\n                                {this.affichMembers()}\n                            </div>\n                        </div>\n                </div>\n            )\n        }\n        return (<p> {this.state.username} est rentré sur le channel</p>);\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}